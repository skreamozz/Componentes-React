{"version":3,"sources":["componentes/tabla/FilterInputs.js","componentes/tabla/Tabla.js","componentes/paginacion/Paginacion.js","componentes/modal/Modal.js","hooks/useFilter.js","hooks/usePaginacion.js","utiles.js","hooks/useSorter.js","componentes/abmGen/Abm.js","componentes/lupa/Lupa.js","componentes/slideMenu/SlideMenu.js","componentes/dataTable/DataTable.js","componentes/dashBoard/Dashboard.js","App.js","index.js"],"names":["FilterInputs","Input","campo","data","filterInputs","handleFilterInput","name","type","className","value","onChange","placeholder","Tabla","onRowClick","onRowDobleClick","camposOcultos","onHeaderSort","onFilter","useState","campos","setCampos","sortUp","setSortUp","openFilter","setOpenFilter","setFilterInputs","filterError","setFilterError","useEffect","keys","Object","length","filter","key","includes","handleFilterClick","e","stopPropagation","target","checked","filterInputsTemp","handleFilterCancel","map","index","style","minWidth","onClick","direction","cursor","undefined","transform","zIndex","row","onDoubleClick","toString","defaultProps","Paginacion","cantidadItems","paginaActual","elementosAMostrar","children","handlePaginacion","cantPaginas","setCantPaginas","Items","setItems","offset","setOffset","useCallback","handlePuntitos","classList","contains","id","offsetTemp","paginas","Math","floor","items","pagina","push","controles","Modal","status","handleClose","useFilter","dataFiltrada","setDataFiltrada","dataFiltradaTemp","forEach","dato","parseInt","usePaginacion","itemsPorPagina","setPaginaActual","dataPaginada","setDataPaginada","actual","cantidadAmostrar","inicio","obtenerInicioyFin","fin","slice","useSorter","setData","sortedData","sort","a","b","claseSeleccion","Abm","titulo","urls","selectedRow","setSelectedRow","isOpenModal","setIsOpenModal","modalForm","setModalForm","fetch","result","json","datos","Array","isArray","handleClick","accion","FormBase","types","el","toggle","onSubmit","preventDefault","defaultValue","defaultChecked","disabled","parentNode","filtrar","filtro","Lupa","selectUno","selectDos","filtros","setFiltros","inputUno","inputDos","inputs","setInputs","error","CamposTemp","handleSelectChange","handleInputChange","SlideMenu","isOpen","setIsOpen","ItemState","setItemState","item","sub","open","Provider","color","Itemindex","to","itemStateTemp","icono","texto","DataTable","handleHeaderSort","Dashboard","App","datosState","setDatosState","res","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.463e4837.chunk.js","sourcesContent":["const FilterInputs = ({ campo, data, filterInputs, handleFilterInput }) => {\n  let Input;\n\n  switch (typeof data[0][campo]) {\n    case \"number\":\n      Input = (\n        <input\n          name={campo}\n          type=\"number\"\n          className=\"form-control-sm\"\n          value={filterInputs[campo] || \"\"}\n          onChange={handleFilterInput}\n          placeholder=\"Seleccione un N°\"\n        />\n      );\n      break;\n    case \"boolean\":\n      Input = (\n        <div className=\"form-check form-check-inline\">\n          <input\n            name={campo}\n            type=\"checkbox\"\n            className=\"form-check-input position-static\"\n            onChange={handleFilterInput}\n            value={filterInputs[campo] || false}\n          />\n        </div>\n      );\n      break;\n    default:\n      Input = (\n        <input\n          name={campo}\n          value={filterInputs[campo] || \"\"}\n          type=\"text\"\n          className=\"form-control-sm\"\n          onChange={handleFilterInput}\n          placeholder=\"Ingrese un valor...\"\n        />\n      );\n      break;\n  }\n  return Input;\n};\n\nexport default FilterInputs;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  FaSortUp,\n  FaSortDown,\n  FaSort,\n  FaWindowClose,\n  FaFilter,\n  FaCheckCircle,\n} from \"react-icons/fa\";\nimport FilterInputs from \"./FilterInputs\";\n/**\n *\n * Componente tabla que recibe como parametro un arreglo de objetos con\n * los datos que se van a pintar en esta\n * si no recibe nada, por defecto toma el valor de la asignación\n * @param {{\n *  data:Array,\n *  onRowClick:(row) => (e)=>{},\n *  onRowDobleClick:(row) => (e)=>{},\n *  camposOcultos:string[],\n *  onHeaderSort:(campo:{name:string,direction:boolean}) => {},\n *  onFilter:(filterInputs:object) => boolean\n * }} props\n *  @param  onHeaderSort evento de ordenamiento de la tabla\n *  @param  onFilter evento que se desencadena al actualizar los filtros. funcion de filtro.\n */\nconst Tabla = ({\n  data,\n  onRowClick = () => {},\n  onRowDobleClick = () => {},\n  camposOcultos = [],\n  onHeaderSort,\n  onFilter,\n}) => {\n  const [campos, setCampos] = useState([]);\n  const [sortUp, setSortUp] = useState({});\n  const [openFilter, setOpenFilter] = useState({});\n  const [filterInputs, setFilterInputs] = useState({});\n  const [filterError, setFilterError] = useState();\n\n  /********************\n   *\n   * Efectos\n   *\n   ********************/\n\n  useEffect(() => {\n    let keys = Object.keys(data[0]);\n\n    if (camposOcultos.length) {\n      keys = keys.filter((key) => !camposOcultos.includes(key));\n    }\n\n    setCampos(keys);\n  }, [data, camposOcultos]);\n\n  /**\n   *\n   *  Handlers\n   *\n   */\n\n  const handleHeaderClick = (campo) => (e) => {\n    e.stopPropagation();\n    if (onHeaderSort) {\n      setSortUp({ [campo]: !sortUp[campo] });\n      onHeaderSort({\n        name: campo,\n        direction: !sortUp[campo],\n      });\n    }\n  };\n\n  const handleFilterClick = (key) => (e) => {\n    e.stopPropagation();\n    setOpenFilter({\n      [key]: !openFilter[key],\n    });\n  };\n\n  const handleFilterInput = (e) => {\n    const { name, value, checked, type } = e.target;\n\n    //se agrega el nuevo valor que se va a utilizar a la hora de filtrar.\n    const filterInputsTemp = {\n      ...filterInputs,\n      [name]: type && type === \"checkbox\" ? checked : value,\n    };\n\n    //actualizacion del estado.\n    setFilterInputs(filterInputsTemp);\n    setSortUp({});\n\n    //ejecucion del filtro.\n    if (!onFilter(filterInputsTemp)) {\n      setFilterError(true);\n      return;\n    }\n\n    setFilterError();\n  };\n\n  const handleFilterCancel = (key) => (e) => {\n    e.stopPropagation();\n    handleFilterInput({\n      target: { name: key, value: \"\" },\n    });\n    setOpenFilter({});\n  };\n\n  /*********************\n   *\n   *  Funciones.\n   *\n   ********************/\n\n  //funcion encargada de manejar el header de la tabla.\n  const CrearThead = () => (\n    <thead className=\"thead-dark \">\n      <tr className=\"\">\n        {campos.map((key, index) => (\n          <th\n            style={{ minWidth: \"6rem\" }}\n            key={index}\n            className=\"user-select-none\"\n          >\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {/* Sorter */}\n              <div\n                onClick={handleHeaderClick(key)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <span className=\"\">{key}</span>\n                <br />\n                <span className=\"mx-1 badge\">\n                  {onHeaderSort ? (\n                    sortUp[key] === undefined ? (\n                      <FaSort />\n                    ) : sortUp[key] ? (\n                      <FaSortUp />\n                    ) : (\n                      <FaSortDown />\n                    )\n                  ) : null}\n                </span>\n              </div>\n              {/* end Sorter */}\n              {/* Filtros */}\n              {onFilter ? (\n                <div\n                  className={` ${\n                    filterInputs[key] !== undefined && filterInputs[key] !== \"\"\n                      ? \"bg-primary\"\n                      : \"\"\n                  } rounded px-2 badge  text-center align-self-end p-relative`}\n                  onClick={handleFilterClick(key)}\n                >\n                  <span style={{ cursor: \"pointer\" }}>\n                    <FaFilter />\n                  </span>\n                  {/* DropDown */}\n                  <ul\n                    onClick={(e) => e.stopPropagation()}\n                    className={`${\n                      !openFilter[key] ? \"d-none\" : \"\"\n                    } position-absolute bg-light text-dark list-group  mt-2 shadow`}\n                    style={{\n                      transform: \"translateX(-50%)\",\n                      zIndex: \"1000\",\n                    }}\n                  >\n                    <li className=\"list-group-item py-1 pt-2 border border-white bg-dark text-white  text-center\">\n                      <h6>Filtro {key}</h6>\n                    </li>\n                    {/* Input */}\n                    <li className=\"list-group-item\">\n                      <div className=\"form-group card-body py-1 px-1 m-1 d-flex justify-content-center align-items-center\">\n                        <div className=\"form-group\">\n                          <FilterInputs\n                            campo={key}\n                            data={data}\n                            filterInputs={filterInputs}\n                            handleFilterInput={handleFilterInput}\n                          />\n                          <small className=\"form-text text-danger\">\n                            {filterError ? \"No se hallaron coincidencias.\" : \"\"}\n                          </small>\n                        </div>\n                        {/* fin Input */}\n                        {/* Botones del Input */}\n                        <div className=\"form-group align-self-start\">\n                          <label\n                            onClick={handleFilterCancel({})}\n                            className=\" px-2 h6 \"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <FaCheckCircle className=\"text-black rounded-circle text-center\" />\n                          </label>\n                          <label\n                            onClick={handleFilterCancel(key)}\n                            className=\" h6 \"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <FaWindowClose className=\"text-black rounded-circle text-center\" />\n                          </label>\n                          {/* fin Botones del Input */}\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  {/* End DropDown */}\n                </div>\n              ) : null}\n              {/* end Filtros */}\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n\n  //funcion encargada de manejar el cuerpo de la tabla.\n  const CrearTbody = () => (\n    <tbody>\n      {data.map((row, index) => (\n        <tr\n          className=\"user-select-none\"\n          onClick={onRowClick(row)}\n          onDoubleClick={onRowDobleClick(row)}\n          key={index}\n        >\n          {campos.map((campo, index) => {\n            if (row[campo] !== undefined) {\n              if (typeof row[campo] === \"boolean\")\n                return (\n                  <td key={index}>\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => {}}\n                      checked={row[campo]}\n                    />\n                  </td>\n                );\n              return <td key={index}>{row[campo].toString()}</td>;\n            }\n            return undefined;\n          })}\n        </tr>\n      ))}\n    </tbody>\n  );\n\n  return (\n    <div className=\"table-responsive-md\">\n      <table className=\"table shadow table-bordered table-striped  table-hover rounded \">\n        {CrearThead()}\n        {CrearTbody()}\n      </table>\n    </div>\n  );\n};\nTabla.defaultProps = {\n  data: [{}],\n};\n\nexport default Tabla;\n","import { useCallback, useEffect, useState } from \"react\";\n\n//cantidad de paginas simultaneas que muestra la paginacion\nconst ItemsPaginacion = 5;\n\n/**\n * @param {*} cantidadItems cantidad total de elementos de la tabla\n * @param {*} paginaActual página que se esta mostrando\n * @param {*} elementosAMostrar cantidad de elementos que se van a mostrar en la tabla\n * @param {*} handlePaginacion controlador del cambio de paginas este debe recibir un numero y devolver una funcion. (pag) => (e)=> {}\n */\nconst Paginacion = ({\n  cantidadItems,\n  paginaActual,\n  elementosAMostrar,\n  children,\n  handlePaginacion,\n}) => {\n  const [cantPaginas, setCantPaginas] = useState(0);\n  const [Items, setItems] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  handlePaginacion = useCallback(handlePaginacion, [handlePaginacion]);\n  //controlador de los elementos de la paginacion que no son paginas.\n  const handlePuntitos = (e) => {\n    const { target } = e;\n    if (target.classList.contains(\"disabled\")) return;\n    switch (target.id) {\n      case \"restar\":\n        if (offset <= 0) return;\n        setOffset(offset - 1);\n        break;\n      case \"sumar\":\n        setOffset(offset + 1);\n        break;\n      case \"primero\":\n        handlePaginacion(1)();\n        setOffset(0);\n        break;\n      case \"ultimo\":\n        const offsetTemp = cantPaginas / ItemsPaginacion - 1;\n        if (paginaActual === cantPaginas) break;\n        handlePaginacion(cantPaginas)();\n        if (offsetTemp <= 0) break;\n        setOffset(offsetTemp);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**************************\n   *\n   *          Efectos\n   *\n   **************************/\n\n  //efecto encargado de verificar y resetear el ofset cuando la pagina sea = a 1\n  useEffect(() => {\n    if (paginaActual === 1) {\n      setOffset(0);\n    }\n  }, [paginaActual]);\n\n  //efecto encargado de calcular la cantidad de paginas que va a tener la paginacion\n  //\n  useEffect(() => {\n    let paginas = Math.floor(cantidadItems / elementosAMostrar);\n    if (paginas * elementosAMostrar < cantidadItems) paginas++;\n    setCantPaginas(paginas);\n  }, [cantidadItems, elementosAMostrar]);\n\n  //efecto que se encarga de crear todos los items de la paginacion.\n  useEffect(() => {\n    let items = [];\n    for (let index = 1; index <= ItemsPaginacion; index++) {\n      let pagina = Math.floor(index + ItemsPaginacion * offset);\n      if (pagina <= cantPaginas && pagina > 0) {\n        items.push(\n          <li\n            key={index}\n            className={`page-item ${paginaActual === pagina && \"active\"}`}\n            onClick={handlePaginacion(pagina)}\n          >\n            <span className=\"page-link user-select-none\">{pagina}</span>\n          </li>\n        );\n      }\n\n      setItems(items);\n    }\n  }, [cantPaginas, paginaActual, handlePaginacion, offset]);\n\n  const controles = () => (\n    <ul className=\"pagination pagination-sm mb-2\">\n      <li className=\"page-item\" onClick={handlePuntitos}>\n        <span id=\"primero\" className=\"page-link user-select-none\">\n          Primero\n        </span>\n      </li>\n      <li\n        onClick={handlePuntitos}\n        className={`page-item ${offset === 0 ? \"disabled\" : \"\"}`}\n      >\n        <span id=\"restar\" className=\"page-link user-select-none\">\n          ...\n        </span>\n      </li>\n\n      {Items}\n      <li\n        onClick={handlePuntitos}\n        className={`page-item ${\n          offset * ItemsPaginacion + ItemsPaginacion >= cantPaginas\n            ? \"disabled\"\n            : \"\"\n        }`}\n      >\n        <span id=\"sumar\" className=\"page-link user-select-none\">\n          ...\n        </span>\n      </li>\n      <li className=\"page-item\" onClick={handlePuntitos}>\n        <span id=\"ultimo\" className=\"page-link user-select-none\">\n          Ultimo\n        </span>\n      </li>\n    </ul>\n  );\n\n  return (\n    <div className=\"row ml-1 mt-1 pt-1\">\n      <div className=\"col\">\n        {controles()}\n        {children}\n        {children ? controles() : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Paginacion;\n","import \"./Modal.css\";\n\n/**\n *\n * @param {*} status parametro encargado de mostrar u ocultar el modal\n * @param {*} handleClose controlador del cierre del modal\n */\nconst Modal = ({ status = false, children, handleClose }) => {\n  return (\n    <div className={`overlay ${status ? \"open\" : \"\"}`}>\n      <div className=\"modalCustom\">\n        <span className=\"closeBtn\" onClick={handleClose}>\n          x\n        </span>\n        <div className=\"overflow-auto contenedor m-2 my-2\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\n\n/**\n * @param {[{}]} data\n */\nconst useFilter = (data) => {\n  const [dataFiltrada, setDataFiltrada] = useState([{}]);\n  useEffect(() => {\n    setDataFiltrada(data);\n  }, [data]);\n  const filtrar = (value) => {\n    const campos = Object.keys(value);\n    let dataFiltradaTemp = data;\n    campos.forEach((campo) => {\n      if (value[campo] === \"\") return;\n\n      switch (typeof data[0][campo]) {\n        case \"number\":\n          dataFiltradaTemp = dataFiltradaTemp.filter(\n            (dato) => dato[campo] === parseInt(value[campo])\n          );\n          break;\n        case \"boolean\":\n          dataFiltradaTemp = dataFiltradaTemp.filter(\n            (dato) => dato[campo].toString() === value[campo].toString()\n          );\n          break;\n        default:\n          dataFiltradaTemp = dataFiltradaTemp.filter((dato) =>\n            dato[campo].includes(value[campo])\n          );\n          break;\n      }\n    });\n\n    if (dataFiltradaTemp.length > 0) {\n      setDataFiltrada(dataFiltradaTemp);\n      return true;\n    }\n    setDataFiltrada(data);\n    return false;\n  };\n\n  return [dataFiltrada, setDataFiltrada, filtrar];\n};\n\nexport default useFilter;\n","import { useEffect, useState } from \"react\";\nimport { obtenerInicioyFin } from \"../utiles\";\n\n/**\n *\n * @param {number} itemsPorPagina\n * @param {[{}]} data\n * hook que controla la logica de la paginación retorna\n * {dataPaginada, paginaActual, handlePaginacion, setPaginaActual}\n */\nconst usePaginacion = (itemsPorPagina, data) => {\n  const [paginaActual, setPaginaActual] = useState(1);\n  const [dataPaginada, setDataPaginada] = useState([{}]);\n\n  //efecto encargado de obtener cada pagina segun la pagina en la que se encuentre.\n  useEffect(() => {\n    let [inicio, fin] = obtenerInicioyFin(paginaActual, itemsPorPagina);\n    setDataPaginada(data.slice(inicio, fin));\n  }, [paginaActual, data, itemsPorPagina]);\n\n  const handlePaginacion = (pagina) => (e) => {\n    setPaginaActual(pagina);\n  };\n\n  return { dataPaginada, paginaActual, handlePaginacion, setPaginaActual };\n};\n\nexport default usePaginacion;\n","/**\n * funcion encargada de obtener el rango de la paginacion\n * @param {number} actual pagina que se va a mostrar.\n * @param {number} cantidadAmostrar cantidad de campos que va a tener la pagina.\n *\n */\nconst obtenerInicioyFin = (actual, cantidadAmostrar) => {\n  let inicio = (actual - 1) * cantidadAmostrar;\n  let fin = inicio + cantidadAmostrar;\n  return [inicio, fin];\n};\n\nexport { obtenerInicioyFin };\n","/**\n *\n * @param {[{}]} data datos a ordenar\n * @param {function} setData metodo que permite la modificacion de la data.\n */\nconst useSorter = (data, setData) => {\n  const handleHeaderSort = (campo) => {\n    const { name, direction } = campo;\n    if (direction === \"\") {\n      return;\n    }\n    const sortedData = data.sort((a, b) => {\n      if (!direction) return a[name] > b[name] ? -1 : 1;\n      return a[name] < b[name] ? -1 : 1;\n    });\n    setData([...sortedData]);\n  };\n\n  return [handleHeaderSort];\n};\n\nexport default useSorter;\n","import { useEffect, useState } from \"react\";\nimport { Paginacion, Tabla, Modal } from \"../../componentes\";\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\nimport { usePaginacion } from \"../../hooks\";\n\nconst claseSeleccion = \"table-primary\";\n\n/**\n *\n * @param {{\n *  titulo:string,\n *  urls:string,\n *  camposOcultos:string[],\n *  itemsPorPagina:number\n * }} props\n *  @param {string} titulo Titulo que va a tener el abm\n *  @param {string} urls endpoint donde se realizaran las peticiones html\n *  @param {string[]} camposOcultos campos que van a ser ocultados a la hora de renderizar el abm\n *  @param {number} itemsPorPagina cantidad de filas que se van a mostrar en cada pagina de la tabla\n */\nconst Abm = ({ titulo, urls, camposOcultos, itemsPorPagina = 10 }) => {\n  const [data, setData] = useState([{}]);\n  const [selectedRow, setSelectedRow] = useState();\n\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [modalForm, setModalForm] = useState();\n\n  const { dataPaginada, paginaActual, setPaginaActual } = usePaginacion(\n    itemsPorPagina,\n    data\n  );\n\n  /****************************************************************************\n   *                                                                           *\n   *                            Efectos                                        *\n   *                                                                           *\n   *****************************************************************************/\n\n  //efecto que se encarga de hacer fetch a la api para traer\n  //todos los datos del abm\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await fetch(urls);\n        const datos = await result.json();\n        if (Array.isArray(datos)) {\n          setData(datos);\n        }\n      } catch (err) {\n        setData([{}]);\n      }\n    })();\n  }, [urls]);\n\n  /****************************************************************************\n   *                                                                           *\n   *                            Manejadores de eventos                         *\n   *                                                                           *\n   *****************************************************************************/\n\n  //evento correspondiente a cliquear una fila\n  const onRowClick = (row) => (e) => {\n    const { parentNode } = e.target;\n    if (parentNode.classList.contains(claseSeleccion)) {\n      parentNode.classList.toggle(claseSeleccion);\n      setSelectedRow(undefined);\n      return;\n    }\n\n    if (selectedRow) selectedRow.el.classList.toggle(claseSeleccion);\n    parentNode.classList.toggle(claseSeleccion);\n    setSelectedRow({ row, el: parentNode });\n  };\n  //controlador de los eventos de la botonera.\n  const handleClick = (accion) => (e) => {\n    let FormBase = <form></form>;\n\n    if (data.length <= 0) return;\n\n    //obtiene los campos de la tabla excluyendo los que estan ocultos\n    let campos = Object.keys(data[0]).filter(\n      (key) => !camposOcultos.includes(key)\n    );\n    //obtiene los tipos que contienen las diferentes celdas de la tabla\n    let types = [\n      ...campos.map((campo) => {\n        switch (typeof data[0][campo]) {\n          case \"boolean\":\n            return \"checkbox\";\n          case \"number\":\n            return \"number\";\n          default:\n            return \"text\";\n        }\n      }),\n    ];\n\n    //evalua que boton se preciono y se arma el formulario correspondiente a esa accion\n    switch (accion) {\n      case \"nuevo\":\n        if (selectedRow) {\n          selectedRow.el.classList.toggle(claseSeleccion);\n          setSelectedRow(undefined);\n        }\n        FormBase = (\n          <form onSubmit={(e) => e.preventDefault()} className=\"card-body\">\n            {campos.map((campo, index) => (\n              <div key={campo} className=\"form-group\">\n                <label>{campo}</label>\n                <input\n                  name={campo}\n                  className=\"form-control\"\n                  type={types[index]}\n                />\n              </div>\n            ))}\n            <button className=\"btn btn-primary btn-block\">Enviar</button>\n          </form>\n        );\n\n        break;\n      case \"modificar\":\n        FormBase = (\n          <form onSubmit={(e) => e.preventDefault()} className=\"card-body\">\n            {campos.map((campo, index) => (\n              <div key={campo} className=\"form-group\">\n                <label>{campo}</label>\n\n                <input\n                  name={campo}\n                  defaultValue={selectedRow.row[campo]}\n                  defaultChecked={selectedRow.row[campo]}\n                  className=\"form-control\"\n                  type={types[index]}\n                />\n              </div>\n            ))}\n            <button className=\"btn btn-warning btn-block\">Modificar</button>\n          </form>\n        );\n\n        break;\n      case \"eliminar\":\n        FormBase = (\n          <form onSubmit={(e) => e.preventDefault()} className=\"card-body\">\n            <h3>Se va a eliminar...</h3>\n            {campos.map((campo, index) => (\n              <div key={campo} className=\"form-group\">\n                <label>{campo}</label>\n                <input\n                  name={campo}\n                  value={selectedRow.row[campo]}\n                  checked={selectedRow.row[campo]}\n                  className=\"form-control\"\n                  disabled={true}\n                  type={types[index]}\n                />\n              </div>\n            ))}\n            <button className=\"btn btn-block btn-danger\">Eliminar</button>\n          </form>\n        );\n\n        break;\n      default:\n        break;\n    }\n    setModalForm(FormBase);\n    setIsOpenModal(true);\n  };\n\n  const handlePaginacion = (pagina) => (e) => {\n    setPaginaActual(pagina);\n    if (selectedRow) {\n      selectedRow.el.classList.toggle(claseSeleccion);\n      setSelectedRow(undefined);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center p-4\">\n        <h3 className=\"display-3 \">\n          <u>{titulo}</u>\n        </h3>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col\">\n          <Paginacion\n            cantidadItems={data.length}\n            paginaActual={paginaActual}\n            elementosAMostrar={itemsPorPagina}\n            handlePaginacion={handlePaginacion}\n          >\n            <Tabla\n              data={dataPaginada}\n              onRowClick={onRowClick}\n              camposOcultos={camposOcultos}\n            />\n          </Paginacion>\n        </div>\n        <div className=\"col-4 col-md-3 d-flex flex-column justify-content-center\">\n          <button\n            onClick={handleClick(\"nuevo\")}\n            className=\"btn btn-outline-primary\"\n          >\n            Nuevo <br /> <BsFillPlusCircleFill />\n          </button>\n          <button\n            onClick={handleClick(\"modificar\")}\n            className=\"btn my-2 btn-outline-warning\"\n            disabled={!selectedRow}\n          >\n            Modificar <br /> <FaPencilAlt />\n          </button>\n          <button\n            onClick={handleClick(\"eliminar\")}\n            className=\"btn btn-outline-danger\"\n            disabled={!selectedRow}\n          >\n            Eliminar <br /> <FaTrashAlt />\n          </button>\n        </div>\n      </div>\n      <Modal\n        status={isOpenModal}\n        handleClose={() => {\n          setIsOpenModal(false);\n          setModalForm(undefined);\n        }}\n      >\n        {modalForm}\n      </Modal>\n    </div>\n  );\n};\n\nexport default Abm;\n","import React, { useEffect, useState } from \"react\";\nimport { Paginacion, Tabla } from \"..\";\nimport usePaginacion from \"../../hooks/usePaginacion\";\n\n/**\n *\n * @param {any} campo\n * @param {any} filtro\n * metodo encargado de aplicar el filtro segun el tipo de dato que contenga\n * el campo\n */\nconst filtrar = (campo, filtro = \"\") => {\n  if (filtro === \"\") return true;\n  switch (typeof campo) {\n    case \"string\":\n      return campo.includes(filtro);\n    case \"number\":\n      return campo === parseInt(filtro);\n    default:\n      return campo.toString().includes(filtro);\n  }\n};\n\n/**\n *\n * @param {{\n * data:object[],\n * camposOcultos:string[],\n * onRowDobleClick:(row)=>(e)=>{}\n * itemsPorPagina:number\n * }} props\n */\nconst Lupa = ({\n  data,\n  camposOcultos,\n  onRowDobleClick = () => {},\n  itemsPorPagina = 5,\n}) => {\n  const [campos, setCampos] = useState([]);\n\n  const [dataFiltrada, setDataFiltrada] = useState([{}]);\n  const [filtros, setFiltros] = useState({ selectUno: \"\", selectDos: \"\" });\n  const [inputs, setInputs] = useState({ inputUno: \"\", inputDos: \"\" });\n\n  const {\n    dataPaginada,\n    paginaActual,\n    handlePaginacion,\n    setPaginaActual,\n  } = usePaginacion(itemsPorPagina, dataFiltrada);\n\n  /**\n   *\n   * efectos\n   *\n   */\n\n  //efecto desencadenado por los filtros, este se encarga de detectar y aplicar los filtros\n  //correspondientes.\n  useEffect(() => {\n    setPaginaActual(1);\n    let dataFiltradaTemp = data\n      .filter((row) => filtrar(row[filtros.selectUno], inputs.inputUno))\n      .filter((row) => filtrar(row[filtros.selectDos], inputs.inputDos));\n\n    if (dataFiltradaTemp.length === 0) {\n      setDataFiltrada([\n        { error: \"no se encontro ningun campo que coincida con la busqueda.\" },\n      ]);\n      return;\n    }\n    setDataFiltrada(dataFiltradaTemp);\n  }, [inputs, filtros, data, setPaginaActual]);\n\n  //efecto encargado de obtener los nombres de los campos excluyendo los que estan ocultos\n  //segun el arreglo pasado por propiedades.\n  useEffect(() => {\n    const keys = Object.keys(data[0]);\n    if (keys.length === 0) return;\n\n    const CamposTemp = keys.filter((key) => !camposOcultos.includes(key));\n    setCampos(CamposTemp);\n    setFiltros({ selectUno: CamposTemp[0], selectDos: CamposTemp[0] });\n  }, [camposOcultos, data]);\n\n  /**\n   *\n   * manejadores de eventos.\n   *\n   */\n\n  const handleSelectChange = (e) => {\n    setFiltros({ ...filtros, [e.target.name]: e.target.value });\n  };\n  const handleInputChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Paginacion\n            cantidadItems={dataFiltrada.length}\n            paginaActual={paginaActual}\n            elementosAMostrar={itemsPorPagina}\n            handlePaginacion={handlePaginacion}\n          >\n            {\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <Tabla\n                      data={dataPaginada}\n                      camposOcultos={camposOcultos}\n                      onRowDobleClick={onRowDobleClick}\n                    />\n                    <div className=\"form-row mb-2\">\n                      <div className=\"col-md-6\">\n                        <div className=\"input-group\">\n                          <input\n                            onChange={handleInputChange}\n                            value={inputs.inputUno}\n                            name=\"inputUno\"\n                            className=\"form-control\"\n                            type=\"text\"\n                          />\n                          <div className=\"input-group-append\">\n                            <select\n                              onChange={handleSelectChange}\n                              name=\"selectUno\"\n                              value={filtros.selectUno}\n                              className=\"custom-select\"\n                            >\n                              {campos.map((campo) => (\n                                <option key={campo} value={campo}>\n                                  {campo}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <div className=\"input-group\">\n                          <input\n                            onChange={handleInputChange}\n                            value={inputs.inputDos}\n                            name=\"inputDos\"\n                            className=\"form-control\"\n                            type=\"text\"\n                          />\n                          <div className=\"input-group-append\">\n                            <select\n                              onChange={handleSelectChange}\n                              name=\"selectDos\"\n                              value={filtros.selectDos}\n                              className=\"custom-select\"\n                            >\n                              {campos.map((campo) => (\n                                <option key={campo} value={campo}>\n                                  {campo}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </Paginacion>\n        </div>\n      </div>\n    </div>\n  );\n};\nLupa.defaultProps = {\n  data: [{}],\n  camposOcultos: [],\n};\n\nexport default Lupa;\n","import { NavLink } from \"react-router-dom\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons\";\nimport { useEffect, useState } from \"react\";\nimport \"./SlideMenu.css\";\n\n/**\n *\n * @param {[{to:string,icono:Icon, texto:string, sub:[{}]}]} param0\n *\n * @arugments to: ruta a la que se va a dirigir el Link\n * @arugments icono: icono que se va a mostrar en el elemento\n * @arguments texto: label que va a tener el elemento\n * @arguments sub: arreglo de items del menu.\n */\nconst SlideMenu = ({ Items }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [ItemState, setItemState] = useState([]);\n  useEffect(() => {\n    setItemState(\n      Items.map((item) => {\n        if (item?.sub) {\n          item.sub.open = false;\n        }\n        return item;\n      })\n    );\n  }, [Items]);\n\n  const handleClick = (e) => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSubMenu = (Itemindex) => (e) => {\n    let itemStateTemp = ItemState.map((item, index) => {\n      if (index === Itemindex) {\n        item.sub.open = !item.sub.open;\n      } else if (item?.sub) {\n        item.sub.open = false;\n      }\n      return item;\n    });\n    setItemState(itemStateTemp);\n  };\n  return (\n    <div className={`slide  ${isOpen ? \"openSlide\" : \"closeSlide\"}`}>\n      <IconContext.Provider value={{ color: \"white\" }}>\n        <div className=\"Bread\" onClick={handleClick}>\n          <AiOutlineMenu />\n        </div>\n      </IconContext.Provider>\n      <ul className=\"menu\">\n        {ItemState?.map((item, index) => (\n          <div key={index}>\n            <li onClick={item.to ? () => {} : handleSubMenu(index)}>\n              <NavLink className=\"link\" to={item?.to || \"#\"}>\n                {item.icono}\n                {isOpen ? item.texto : \"\"}\n              </NavLink>\n            </li>\n            {item.sub ? (\n              <ul\n                className={`submenu  ${item.sub.open ? \"Open\" : \"Close\"}`}\n                id={index}\n              >\n                {item.sub?.map((sub, index) => (\n                  <li key={index} className=\"submenu-item\">\n                    <NavLink to={sub.to} className=\"link\">\n                      {sub.icono}\n                      {isOpen ? sub.texto : \"\"}\n                    </NavLink>\n                  </li>\n                ))}\n              </ul>\n            ) : null}\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SlideMenu;\n","import Tabla from \"../tabla/Tabla\";\nimport Paginacion from \"../paginacion/Paginacion\";\nimport { usePaginacion, useSorter, useFilter } from \"../../hooks\";\n\n/**\n *\n * @param {{data:object[], camposOcultos:string[], itemsPorPagina:number,onRowClick:()=>{},onRowDobleClick:()=>{}}} props\n *  data: -arreglo de objetos con el cual se va a rrellenar la tabla.\n *\n *  camposOcultos: -arreglo que representa a los campos que no se van a mostrar.\n *\n *  itemsPorPagina: -numero que representa la cantidad de filas que va a mostrar cada pagina de la tabla.\n *\n *  onRowClick: -manejador del click de las filas.\n *\n *  onRowDobleClick: -manejador del doble click de las filas.\n *\n */\nconst DataTable = ({\n  data,\n  camposOcultos = [],\n  itemsPorPagina = 10,\n  onRowClick,\n  onRowDobleClick,\n}) => {\n  const [dataFiltrada, setDataFiltrada, filtrar] = useFilter(data);\n  const [handleHeaderSort] = useSorter(dataFiltrada, setDataFiltrada);\n  const { dataPaginada, paginaActual, handlePaginacion } = usePaginacion(\n    itemsPorPagina,\n    dataFiltrada\n  );\n\n  return (\n    <>\n      <Paginacion\n        cantidadItems={dataFiltrada.length}\n        paginaActual={paginaActual}\n        elementosAMostrar={itemsPorPagina}\n        handlePaginacion={handlePaginacion}\n      >\n        <Tabla\n          data={dataPaginada}\n          onRowClick={onRowClick}\n          onRowDobleClick={onRowDobleClick}\n          camposOcultos={camposOcultos}\n          onHeaderSort={handleHeaderSort}\n          onFilter={filtrar}\n        />\n      </Paginacion>\n    </>\n  );\n};\nDataTable.defaultProps = {\n  data: [{}],\n};\nexport default DataTable;\n","const Dashboard = () => {\n  return (\n    <div className=\"d-flex vh-100 justify-content-center align-items-center text-center\">\n      <div>\n        <h1>Dashboard ....</h1>\n        <span className=\"text-bold\">Work in progres.</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { BsLayoutWtf, BsLayers, BsSearch, BsTable } from \"react-icons/bs\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport {\n  Abm,\n  DataTable,\n  Lupa,\n  Modal,\n  Dashboard,\n  SlideMenu,\n} from \"./componentes\";\n\nfunction App() {\n  //estado que permite actualizar el componente cuando se modifican los datos\n  const [datosState, setDatosState] = useState();\n  //efecto que se ejecuta cuando se monta el componente, este se encarga de traer los datos\n  //de la api\n  useEffect(() => {\n    //funcion de javascript que se auto-ejecuta a si misma;\n    (async () => {\n      //fetch es una api que sirve para hacer peticiones html\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\n      const json = await res.json();\n      setDatosState(json);\n    })();\n  }, []);\n\n  return (\n    //elementos que se dibujan por pantalla\n    <div className=\"container\">\n      <BrowserRouter>\n        <div className=\"row\">\n          <div className=\"col offset-1\">\n            {/** Switch que contiene las rutas y los componentes a renderizar*/}\n            <Switch>\n              <Route\n                path=\"/abm\"\n                exact\n                render={() => (\n                  <Abm\n                    titulo=\"productos\"\n                    urls=\"https://jsonplaceholder.typicode.com/posts\"\n                    camposOcultos={[\"id\"]}\n                    itemsPorPagina={5}\n                  />\n                )}\n              />\n              <Route\n                path=\"/lupa\"\n                exact\n                render={() => (\n                  <Modal status={true}>\n                    <Lupa data={datosState} camposOcultos={[\"id\", \"userId\"]} />\n                  </Modal>\n                )}\n              />\n              <Route\n                path=\"/DataTable\"\n                exact\n                render={() => (\n                  <div className=\"row justify-content-center align-items-center vh-100\">\n                    <div className=\"col\">\n                      <DataTable data={datosState} itemsPorPagina={5} />\n                    </div>\n                  </div>\n                )}\n              />\n              <Route path=\"/Dashboard\" exact component={Dashboard} />\n              <Route path=\"/\" />\n            </Switch>\n\n            <SlideMenu\n              Items={[\n                {\n                  to: \"/Abm\",\n                  icono: <BsLayers />,\n                  texto: \"Abm\",\n                },\n                { to: \"/lupa\", icono: <BsSearch />, texto: \"Lupa\" },\n                {\n                  to: \"/DataTable\",\n                  icono: <BsTable />,\n                  texto: \"DataTable\",\n                },\n                {\n                  to: \"/Dashboard\",\n                  icono: <BsLayoutWtf />,\n                  texto: \"Dashboard\",\n                },\n                {\n                  icono: <BsLayoutWtf />,\n                  texto: \"Dashboard\",\n                  sub: [\n                    {\n                      to: \"/Dashboard\",\n                      icono: <BsLayoutWtf />,\n                      texto: \"Dashboard\",\n                    },\n                  ],\n                },\n              ]}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}